<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.blueparrott.connectsample">

    <!-- when phone boots, this is necessary to boot the Receiver that starts the
    SDKConnectionService and the RecPlayAudioService in the background-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.BROADCAST_STICKY" />

    <!-- following only required if supporting BLE Versions of the Parrott Buttonâ„¢ -->
    <!--bizarrely required on android 5.0 to get at ble https://code.google.com/p/android/issues/detail?id=189090 -->
    <!--only required if you are targetting BP Headsets that require BLE - NOT required for headsets that use AT commands -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <!-- Pie requires this..-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name="com.blueparrott.connectsample.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- starts on boot- Note that some devices (e.g. Huawei) require the user to explicitly give permission in Settings for specific apps to start -->
        <receiver
            android:name="com.blueparrott.connectsample.StartServicesOnBoot"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
            </intent-filter>
        </receiver>

        <!-- foreground ervice that monitors for bluetooth changes -->
        <service
            android:name="com.blueparrott.connectsample.SdkConnectionService"
            android:enabled="true" />


    </application>
</manifest>
